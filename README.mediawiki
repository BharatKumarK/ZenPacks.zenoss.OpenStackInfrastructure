This ZenPack allows for monitoring of OpenStack from a service provider perspective.  This means that in addition to the user-oriented components supported in the regular OpenStack ZenPack (instances, flavors, images), the underlying OpenStack servers and software is monitored.


== Basic Usage ==
Once the OpenStack ZenPack is installed and you can begin monitoring by going to the infrastructure screen and clicking the normal button for adding devices. You'll find a new option labeled, "Add OpenStack Endpoint (Infrastructure)."

Choose that option and you'll be presented with a dialog asking for the following inputs.

# Device To Create - name to use for this device in zenoss.  Should not be an actual hostname, since that name will be used when the host is registered as a linux device.
# Auth URL - A keystone URL, such as http://<hostname>:5000/v2.0/
# Username, Password / API Key, Project/Tenant ID - *Administrative* credentials to your zenoss instance.
# Region Name - choose the correct region from the dropdown
# Ceilometer URL - should auto-populate based on the other selections.

Once you click Add, Zenoss will contact the OpenStack API and discover servers, images and flavors. Once it is complete you'll find a new device in the OpenStack device class with the same name as the hostname or IP you entered into the dialog. Click into this new device to see everything that was discovered.

The following types of elements are discovered.
* Tenants
* Instances (Servers)
* vNICs
* Images
* Flavors
* Nova API Endpoints
* Regions
* Availability Zones
* Hosts
* Nova Services (processes supporting nova servers)
* Hypervisors

The following metrics are collected.
* Images 
	Total Images
	Images by State
* Flavors
	Total Flavors
* Instance Metrics
	Total Instances
	Instances by State
	CPU Utilization (percent)
    Disk Requests (requests/sec)
    Disk IO Rate (bytes/sec)
* Vnic Metrics
    Network Packet Rate (packets/sec)
    Network Throughput (bytes/sec)
* Host Metrics (Zenoss Linux OS monitoring)
	Load Average
	CPU Utilization
	Free Memory
	Free Swap
	IO
* Nova Service Metrics (Zenoss Process monitoring)
	CPU Utilization
	Memory Utilization
	Process Counts per Service

All metrics collected by OpenStack Ceilometer may be collected and graphed in 
Zenoss, and all events processed through ceilometer are exposed via the
Zenoss Event Console.


==Ceilometer Enablement==

Although you may add an openstack device to zenoss, as shown above, event and
performance data will not be collected until the following steps are performed.

===Zenoss Configuration Steps===

On your zenoss host, you must run the following command as the zenoss user:
<syntaxhighlight lang="bash">
   /opt/zenoss/bin/openstack_amqp_config
</syntaxhighlight>

It will create a new user in rabbitmq and set up its permissions.  It will 
print out the proper values to use for amqp_hostname, amqp_port, amqp_userid,
amqp_password, and amqp_virtualhost during ceilometer configuration (see below)

===OpenStack Ceilometer Configuration Steps===

Zenoss relies upon a ceilometer dispatcher plugin to ship raw event and
metering data from ceilometer to Zenoss for storage in the Zenoss event 
and performance databases.   This integration is done by publishing messages
to Zenoss's RabbitMQ server.

This dispatcher should be installed on all nodes running any ceilometer, but
particularly those running ceilometer-collector or ceilometer-agent-notification.

To install it, perform the following steps on each of these openstack nodes (NOT
on the zenoss collector):


<syntaxhighlight lang="bash">
  sudo pip -q install --force-reinstall https://github.com/zenoss/ceilometer_zenoss/archive/master.zip
  sudo cp /usr/lib/python2.6/site-packages/ceilometer_zenoss/event_definitions.yaml /etc/ceilometer/
</syntaxhighlight>

Edit /etc/ceilometer/ceilometer.conf, and add the following lines to the
appropriate sections:

<syntaxhighlight lang="text">
  [DEFAULT]
  dispatcher=zenoss
  
  [notification]
  store_events=True
</syntaxhighlight>

Also add the [dispatcher_zenoss] section reported by openstack_amqp_config above.

===Optional Step===

By default, instance state changes will be captured by Zenoss when certain 
events occur, for example, when an instance is shut down, the state change
to SHUTDOWN will be reflected in Zenoss.

However, certain state changes that don't correspond to another defined event
may not be picked up until the next time zenoss models the environment.

If you would like to reduce the likelihood of this occurring, you can configure
OpenStack Nova to send an event (through ceilometer) to zenoss whenever
any VM state change occurs by adding the following to nova.conf:

<syntaxhighlight lang="text">
  [DEFAULT]
  notify_on_state_change=vm_state
</syntaxhighlight>  

Note that this will cause increased event load, both on OpenStack and Zenoss,
and additional processing within the event transforms in Zenoss to keep
the model consistent.   Since most instance changes will still be caught
without this option enabled, it is recommended to leave this disabled if your
OpenStack environment is very large.




== Changes ==

;2.0.0
* Initial Release