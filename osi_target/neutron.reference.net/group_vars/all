---
# Variables listed here are applicable to all host groups

sudo_user: zenoss
sudo_group: zenoss
sudo_groups: sudo
sudo_gid: 1000
sudo_pass: "$6$Gum3S@lt$n9F6qLne80Grcyc0cNU3ILhwBk3K29yHz682kn6tRn85i34kyb//rsmpxd1k5YyDWPHjHBXJ5zDDuDenpkAiZ0"

flavor_tiny:
  name: 'tiny'
  id: '77'
  ram: 64
  disk: 0
  cpu: 1

keystone:
  OS_USERNAME: admin
  OS_TENANT_NAME: admin
  OS_PASSWORD: zenoss

# -----------------------------------------------------------------------------

network_prefix: "{{ ansible_default_ipv4.gateway | regex_replace('\\d{1,3}$', '') }}"
global_gateway: "{{ network_prefix }}1"   # If your gateway is not .1, change it.
zenoss_instance: mp6.zenoss.loc           # You *MUST* change this to your Zenoss instance.

hardware:
  primary_network_if: eth0
  eth0:
    macaddress: "{{ansible_eth0.macaddress}}"   # Make sure it matches your MAC
    address: "{{ansible_default_ipv4.address}}" # You may have to change
    gateway: "{{global_gateway}}"               # You may have to change
    network: "{{ansible_default_ipv4.network}}" # You may have to change
    dns: "{{global_gateway}}"                   # You may have to change
    ntpd: "{{global_gateway}}"                  # You MAY need to change this!
    floating_network: "{{network_prefix}}224/27" # WARNING: *MUST* change this!
    dhcp_start: "{{network_prefix}}225"          # WARNING: *MUST* change this!
    dhcp_end: "{{network_prefix}}254"            # WARNING: *MUST* change this!

#------------------------------------------------------------------------------
# Don't change antyhing below here unless you *know* what you're doing.
# Access these via syntax {{ openstack.XYZ }}
#------------------------------------------------------------------------------

openstack:
  KEYSTONE_ADMIN_PW: "{{keystone.OS_PASSWORD}}"
  CONTROLLER_HOST: "{{ hardware.eth0.address }}"
  COMPUTE_HOSTS: "{{ hardware.eth0.address }}"
  NETWORK_HOSTS: "{{ hardware.eth0.address }}"
  VCENTER_HOST: "{{ hardware.eth0.address }}"
  STORAGE_HOST: "{{ hardware.eth0.address }}"
  AMQP_HOST: "{{ hardware.eth0.address }}"
  MARIADB_HOST: "{{ hardware.eth0.address }}"
  NOVA_NETWORK_FIXEDRANGE: 192.168.32.0/28
  MONGODB_HOST: "{{ hardware.eth0.address }}"
  NOVA_NETWORK_FLOATRANGE: "{{ hardware.eth0.floating_network }}"
  NEUTRON_ML2_TYPE_DRIVERS: local
  NEUTRON_ML2_TENANT_NETWORK_TYPES: local
  USE_EPEL: y
  NEUTRON_ML2_MECHANISM_DRIVERS: openvswitch
  NOVA_NETWORK_PUBIF: "{{ hardware.primary_network_if }}"

#------------------------------------------------------------------------------
# Don't change antyhing below unless you *REALLY know* what you're doing.
#------------------------------------------------------------------------------

neutron_ml2_plugin:
  - { section: 'ml2',            parameter: 'type_drivers', value: 'flat,vlan,gre,vxlan' }
  - { section: 'ml2',            parameter: 'tenant_network_types', value: 'vlan,gre,vxlan' }
  - { section: 'ml2',            parameter: 'mechanism_drivers', value: 'openvswitch' }
  - { section: 'ml2_type_flat',  parameter: 'flat_networks', value: 'physnet1' }
  - { section: 'ml2_type_vlan',  parameter: 'network_vlan_ranges', value: 'physnet1' }
  - { section: 'ml2_type_gre',   parameter: 'tunnel_id_ranges', value: '1:1000' }
  - { section: 'ml2_type_vxlan', parameter: 'vni_ranges', value: '10:100' }

ovs_neutron_plugin:
  - { section: 'ovs', parameter: 'enable_tunneling', value: 'True' }
  - { section: 'ovs', parameter: 'local_ip', value: '{{openstack.NETWORK_HOSTS}}' }
  - { section: 'ovs', parameter: 'bridge_mappings', value: 'physnet1:br-ex' }
  - { section: 'agent', parameter: 'tunnel_types', value: 'gre' }

neutron_l3_agent:
  - { section: 'DEFAULT', parameter: 'interface_driver', value: 'neutron.agent.linux.interface.OVSInterfaceDriver' }
  - { section: 'DEFAULT', parameter: 'external_network_bridge', value: 'br-ex' }
  - { section: 'DEFAULT', parameter: 'use_namespaces', value: 'True' }

ceilometer_cfg:
  - { section: 'notification',      parameter: 'store_events',      value: 'True' }
  - { section: 'DEFAULT',           parameter: 'verbose',           value: 'False' }
  - { section: 'DEFAULT',           parameter: 'debug',             value: 'True' }
  - { section: 'dispatcher_zenoss', parameter: 'zenoss_device',     value: '{{zenoss_instance}}' }
  - { section: 'dispatcher_zenoss', parameter: 'amqp_hostname',     value: '{{ inventory_hostname }}' }
  - { section: 'dispatcher_zenoss', parameter: 'amqp_port',         value: 5672 }
  - { section: 'dispatcher_zenoss', parameter: 'amqp_userid',       value: 'openstack' }
  - { section: 'dispatcher_zenoss', parameter: 'amqp_password',     value: 'zenoss' }
  - { section: 'dispatcher_zenoss', parameter: 'amqp_virtual_host', value: '/zenoss' }

nova_conf:
  - { section: 'libvirt', parameter: 'virt_type',              value: 'qemu' }
  - { section: 'DEFAULT', parameter: 'notify_on_state_change', value: 'vm_state' }

#------------------------------------------------------------------------------
# Service Lists: Should be in one place so we don't have to chase them
#------------------------------------------------------------------------------

nova_services:
  - openstack-nova-api
  - openstack-nova-compute
  - openstack-nova-conductor
  - openstack-nova-scheduler

neutron_services:
  - neutron-dhcp-agent
  - neutron-l3-agent
  - neutron-metadata-agent
  - neutron-openvswitch-agent
  - neutron-server
  - openvswitch

ceilometer_services:
  - openstack-ceilometer-alarm-evaluator
  - openstack-ceilometer-alarm-notifier
  - openstack-ceilometer-api
  - openstack-ceilometer-central
  - openstack-ceilometer-collector
  - openstack-ceilometer-compute
  - openstack-ceilometer-notification
