---
# This play is for PackStack

#-------------------------------------------------------------------------------
#- Preliminary System Setup, get the network services in shape etc...
#- Install Packstack packages.
#- Requirements: Must have a system with minimum 3GB RAM
#-------------------------------------------------------------------------------


- name: check if flavor {{flavor_tiny.name}} exists
  shell: . /home/{{sudo_user}}/keystonerc_admin; nova flavor-show {{flavor_tiny.name}}
  ignore_errors: true
  register: flavor_check

- name: create flavor {{flavor_tiny.name}}
  shell: >
    . /home/{{sudo_user}}/keystonerc_admin;
    nova flavor-create {{flavor_tiny.name}} {{flavor_tiny.id}}
    {{flavor_tiny.ram}} {{flavor_tiny.disk}} {{flavor_tiny.cpu}}
  when: flavor_check.rc == 1

- name: Create some users
  keystone_user:
     tenant={{ item }}
     login_user=admin
     login_password=zenoss
     login_tenant_name=admin
     tenant_description='Tenant {{ item }}'
  with_items:
    - A
    - B
    - C
  ignore_errors: true
#'

#-------------------------------------------------------------------------------
#- Define the networks
#-------------------------------------------------------------------------------
- name: Define all networks. 
  quantum_network: name={{item.name}} 
                   tenant_name={{item.tenant_name}} 
                   state=present
                   provider_network_type={{item.network_type}}
                   provider_physical_network={{item.physical_net}}
                   provider_segmentation_id={{item.segmentation_id}}
                   router_external={{item.router_external}}
                   shared={{item.shared}}
                   login_username=admin 
                   login_password={{openstack.KEYSTONE_ADMIN_PW}}
                   login_tenant_name=admin
  with_items:
    - { name: 'public', 
        tenant_name: 'services', 
        network_type: 'flat', 
        physical_net: 'physnet1', 
        segmentation_id: 1,
        router_external: 'yes',
        shared: 'yes'
      }
    - { name: 'A5', 
        tenant_name: 'A', 
        network_type: 'gre', 
        physical_net: null,
        segmentation_id: 5,
        router_external: 'no',
        shared: 'no'
      }
    - { name: 'A6', 
        tenant_name: 'A', 
        network_type: 'gre', 
        physical_net: null,
        segmentation_id: 2,
        router_external: 'no',
        shared: 'no'
      }
    - { name: 'B7', 
        tenant_name: 'B', 
        network_type: 'gre', 
        physical_net: null,
        segmentation_id: 3,
        router_external: 'no',
        shared: 'no'
      }
    - { name: 'C7', 
        tenant_name: 'C', 
        network_type: 'gre', 
        physical_net: null,
        segmentation_id: 4,
        router_external: 'no',
        shared: 'no'
      }
    - { name: 'C9', 
        tenant_name: 'C', 
        network_type: 'gre', 
        physical_net: null,
        segmentation_id: 9,
        router_external: 'no',
        shared: 'no'
      }

#-------------------------------------------------------------------------------
#- Define the Subnets of Networks
#-------------------------------------------------------------------------------
- name: Defaine all networks
  quantum_subnet: name={{item.name}} 
                  network_name={{item.network_name}} 
                  cidr={{item.cidr}}
                  gateway_ip={{item.gateway}}
                  tenant_name={{item.tenant_name}} 
                  enable_dhcp={{item.enable_dhcp}}
                  allocation_pool_start={{item.allocation_pool_start}}
                  allocation_pool_end={{item.allocation_pool_end}}
                  state=present
                  login_username=admin 
                  login_password={{openstack.KEYSTONE_ADMIN_PW}}
                  login_tenant_name=admin
  with_items:
    - { name: 'subnet_public', 
        network_name: 'public',
        cidr: '{{hardware.eth0.network}}/24',
        gateway: '{{hardware.eth0.gateway}}',
        tenant_name: 'services', 
        enable_dhcp: False,
        allocation_pool_start: '{{hardware.eth0.dhcp_start}}',
        allocation_pool_end: '{{hardware.eth0.dhcp_end}}',
      }
    - { name: 'subnet_A5', 
        network_name: 'A5',
        cidr: '10.1.5.0/24',
        gateway: '10.1.5.1',
        tenant_name: 'A', 
        enable_dhcp: True,
        allocation_pool_start: '10.1.5.100',
        allocation_pool_end: '10.1.5.140'
      }
    - { name: 'subnet_A6', 
        network_name: 'A6',
        cidr: '10.1.6.0/24',
        gateway: '10.1.6.1',
        tenant_name: 'A', 
        enable_dhcp: True,
        allocation_pool_start: '10.1.6.100',
        allocation_pool_end: '10.1.6.140'
      }
    - { name: 'subnet_B7', 
        network_name: 'B7',
        cidr: '10.1.7.0/24',
        gateway: '10.1.7.1',
        tenant_name: 'B', 
        enable_dhcp: True,
        allocation_pool_start: '10.1.7.100',
        allocation_pool_end: '10.1.7.140'
      }
    - { name: 'subnet_C7', 
        network_name: 'C7',
        cidr: '10.1.7.0/24',
        gateway: '10.1.7.1',
        tenant_name: 'C', 
        enable_dhcp: True,
        allocation_pool_start: '10.1.7.100',
        allocation_pool_end: '10.1.7.140'
      }
    - { name: 'subnet_C9', 
        network_name: 'C9',
        cidr: '10.1.9.0/24',
        gateway: '10.1.9.1',
        tenant_name: 'C', 
        enable_dhcp: True,
        allocation_pool_start: '10.1.9.100',
        allocation_pool_end: '10.1.9.140'
      }

#-------------------------------------------------------------------------------
#- Define the Routers
#-------------------------------------------------------------------------------
- name: Define the routers
  quantum_router: name={{item.name}} 
                  state=present
                  tenant_name={{item.tenant_name}} 
                  login_username=admin 
                  login_password={{openstack.KEYSTONE_ADMIN_PW}}
                  login_tenant_name=admin
  with_items:
    - { name: 'router_AB', 
        tenant_name: 'services', 
      }
    - { name: 'router_C', 
        tenant_name: 'C', 
      }

#-------------------------------------------------------------------------------
#- Add gateways to the routers
#-------------------------------------------------------------------------------

- name: Add gateways to routers
  quantum_router_gateway: router_name={{item.name}} 
                          state=present
                          network_name={{item.network_name}} 
                          login_username=admin 
                          login_password={{openstack.KEYSTONE_ADMIN_PW}}
                          login_tenant_name=admin
  with_items:
    - { name: 'router_AB', 
        network_name: 'public', 
      }
    - { name: 'router_C', 
        network_name: 'public', 
      }

#-------------------------------------------------------------------------------
#- Connect the Subnet Interfaces to the routers. tenant_name required to match!
#-------------------------------------------------------------------------------

- name: Attach subnet to router interfaces. You must use tenant_name here!
  quantum_router_interface: router_name={{item.router_name}} 
                            subnet_name={{item.subnet_name}} 
                            tenant_name={{item.tenant_name}} 
                            state=present
                            login_username=admin 
                            login_password={{openstack.KEYSTONE_ADMIN_PW}}
                            login_tenant_name=admin
  with_items:
    - { router_name: 'router_AB', 
        subnet_name: 'subnet_A6', 
        tenant_name: 'A', 
      }
    - { router_name: 'router_AB', 
        subnet_name: 'subnet_B7', 
        tenant_name: 'B', 
      }
    - { router_name: 'router_C', 
        subnet_name: 'subnet_C7', 
        tenant_name: 'C', 
      }
    - { router_name: 'router_C', 
        subnet_name: 'subnet_C9', 
        tenant_name: 'C', 
      }

#-------------------------------------------------------------------------------
#- Add the VM instances
#-------------------------------------------------------------------------------


